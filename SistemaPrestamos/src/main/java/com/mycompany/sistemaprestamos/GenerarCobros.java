/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.sistemaprestamos;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 *
 * @author erikr
 */
public class GenerarCobros extends javax.swing.JFrame {

    // private List<String> cuotas;
    /**
     * Creates new form GenerarCobros
     */
    public GenerarCobros() {
        initComponents();
        //  cargarDatosCuotas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnGenerarCobros = new javax.swing.JButton();
        txtDiaInicio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMesInicio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAnioInicio = new javax.swing.JTextField();
        txtDiaFinal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMesFinal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAnioFinal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("GENERAR COBROS");

        jLabel2.setText("FECHA INICIO");

        jLabel3.setText("FECHA FIN");

        btnGenerarCobros.setText("GENERAR COBROS");
        btnGenerarCobros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarCobrosActionPerformed(evt);
            }
        });

        jLabel4.setText("/");

        jLabel5.setText("/");

        jLabel6.setText("/");

        jLabel7.setText("/");

        jLabel8.setText("DIA");

        jLabel9.setText("MES");

        jLabel10.setText("AÃ‘O");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDiaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAnioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDiaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAnioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel9)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel10))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnGenerarCobros)
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(126, 126, 126))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDiaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtAnioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDiaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtMesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtAnioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnGenerarCobros)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnGenerarCobrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarCobrosActionPerformed
        // TODO add your handling code here:

        // Obtener las fechas desde los campos de texto
        String fechaInicioStr = txtDiaInicio.getText() + "/" + txtMesInicio.getText() + "/" + txtAnioInicio.getText();
        String fechaFinStr = txtDiaFinal.getText() + "/" + txtMesFinal.getText() + "/" + txtAnioFinal.getText();

        // Convertir las fechas de String a Date
        Date fechaInicio = parsearFecha(fechaInicioStr);
        Date fechaFin = parsearFecha(fechaFinStr);

        if (fechaInicio == null || fechaFin == null) {
            System.out.println("Fechas invÃ¡lidas. Por favor, ingrese fechas vÃ¡lidas.");
            return;
        }

        // Llamar al mÃ©todo de generaciÃ³n de cobros
        generarCobros(fechaInicio, fechaFin);

    }//GEN-LAST:event_btnGenerarCobrosActionPerformed

    public static Date parsearFecha(String fechaStr) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        try {
            return sdf.parse(fechaStr);
        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
    }

    public static void generarCobros(Date fechaInicio, Date fechaFin) {
        List<String> cobrosActualizados = new ArrayList<>();
        File archivoOriginal = new File("Cuota_Prestamo.txt");
        File archivoTemporal = new File("Cuota_Prestamo.tmp");

        // Define el formato de fecha
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        try (BufferedReader br = new BufferedReader(new FileReader(archivoOriginal)); BufferedWriter bw = new BufferedWriter(new FileWriter(archivoTemporal))) {

            String linea;
            while ((linea = br.readLine()) != null) {
                String[] partes = linea.split(",");
                boolean statusCobro = Boolean.parseBoolean(partes[7]);
                Date fechaCobro = parsearFecha(partes[2], sdf); // Ajusta aquÃ­
                System.out.println("UAAAAAAA.");
                if (fechaCobro != null && fechaCobro.after(fechaInicio) && fechaCobro.before(fechaFin) && !statusCobro) {
                    // Procesar este cobro
                    System.out.println("mmmmmmm");
                    cobrosActualizados.add(linea);
                    System.out.println("truco");
                } else {
                    bw.write(linea);
                    bw.newLine();
                }
                System.out.println("mauluma.");
            }

            // Procesar los cobros actualizados
            for (String cobro : cobrosActualizados) {
                procesarCobro(cobro);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Error al procesar los cobros.");
            return;
        }

        // Renombrar archivo temporal
        if (archivoOriginal.delete()) {
            if (!archivoTemporal.renameTo(archivoOriginal)) {
                System.out.println("No se pudo renombrar el archivo temporal.");
            }
        } else {
            System.out.println("No se pudo eliminar el archivo original.");
        }

        System.out.println("Cobros generados exitosamente.");
    }

    public static void procesarCobro(String cobro) throws IOException {
        String[] partes = cobro.split(",");
        // AquÃ­ se debe implementar la lÃ³gica especÃ­fica para actualizar el estado del cobro

        // Ejemplo de actualizaciÃ³n (este cÃ³digo debe ser adaptado segÃºn la estructura de tus archivos)
        String idPrestamo = partes[0];
        double montoCobro = Double.parseDouble(partes[2]);
        boolean statusCuota = Boolean.parseBoolean(partes[7]);

        // Leer el archivo de prÃ©stamos y actualizar el balance
        File archivoPrestamos = new File("Prestamos.txt");
        File archivoTemporal = new File("Prestamos.tmp");

        try (BufferedReader br = new BufferedReader(new FileReader(archivoPrestamos)); BufferedWriter bw = new BufferedWriter(new FileWriter(archivoTemporal))) {

            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datosPrestamo = linea.split(",");
                if (datosPrestamo[0].equals(idPrestamo)) {
                    double balancePrestamo = Double.parseDouble(datosPrestamo[2]);
                    balancePrestamo -= montoCobro;

                    // Actualizar el estado de la cuota
                    statusCuota = balancePrestamo <= 0;

                    if (balancePrestamo <= 0) {
                        datosPrestamo[2] = "0"; // Balance del prÃ©stamo
                        datosPrestamo[3] = "true"; // Estado del prÃ©stamo
                    } else {
                        datosPrestamo[2] = String.valueOf(balancePrestamo);
                    }

                    linea = String.join(",", datosPrestamo);
                }
                bw.write(linea);
                bw.newLine();
            }
        }

        if (archivoPrestamos.delete()) {
            if (!archivoTemporal.renameTo(archivoPrestamos)) {
                System.out.println("No se pudo renombrar el archivo temporal de prÃ©stamos.");
            }
        } else {
            System.out.println("No se pudo eliminar el archivo original de prÃ©stamos.");
        }

        // Actualizar el estado del cobro en el archivo de cobros
        File archivoCobros = new File("Cobro_Prestamo.txt");
        File archivoCobrosTemporal = new File("Cobro_Prestamo.tmp");

        try (BufferedReader brCobros = new BufferedReader(new FileReader(archivoCobros)); BufferedWriter bwCobros = new BufferedWriter(new FileWriter(archivoCobrosTemporal))) {

            String lineaCobro;
            while ((lineaCobro = brCobros.readLine()) != null) {
                if (lineaCobro.equals(cobro)) {
                    // Actualizar el estado del cobro a True
                    lineaCobro = lineaCobro.replace("false", "true");
                }
                bwCobros.write(lineaCobro);
                bwCobros.newLine();
            }
        }

        if (archivoCobros.delete()) {
            if (!archivoCobrosTemporal.renameTo(archivoCobros)) {
                System.out.println("No se pudo renombrar el archivo temporal de cobros.");
            }
        } else {
            System.out.println("No se pudo eliminar el archivo original de cobros.");
        }
    }

    private static Date parsearFecha(String fechaStr, SimpleDateFormat sdf) {
        try {
            return sdf.parse(fechaStr);
        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    // MÃ©todo para validar que las fechas son correctas
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenerarCobros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenerarCobros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenerarCobros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenerarCobros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenerarCobros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarCobros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAnioFinal;
    private javax.swing.JTextField txtAnioInicio;
    private javax.swing.JTextField txtDiaFinal;
    private javax.swing.JTextField txtDiaInicio;
    private javax.swing.JTextField txtMesFinal;
    private javax.swing.JTextField txtMesInicio;
    // End of variables declaration//GEN-END:variables
}
